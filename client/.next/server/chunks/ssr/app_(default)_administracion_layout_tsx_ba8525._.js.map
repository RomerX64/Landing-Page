{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/tomir/OneDrive/Desktop/AssetlyLandingPage/client/app/%28default%29/administracion/layout.tsx"],"sourcesContent":["\"use client\";\r\nimport { AdminContext } from \"@/context/Administracion.context\";\r\nimport { SuscribeContext } from \"@/context/Suscribe.context\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\n\r\ninterface UserType {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n  subscripcion?: {\r\n    plan?: {\r\n      id: number;\r\n      name: string;\r\n    };\r\n  };\r\n  // Otros campos que pueda tener el usuario\r\n  [key: string]: any;\r\n}\r\n\r\nconst AdminPanel: React.FC = () => {\r\n  const { getUsers } = useContext(AdminContext);\r\n  const { planes } = useContext(SuscribeContext);\r\n  const [allUsers, setAllUsers] = useState<UserType[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [selectedPlans, setSelectedPlans] = useState<number[]>([]);\r\n  const [selectedUser, setSelectedUser] = useState<UserType | null>(null);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  // Cargar usuarios al montar el componente\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const users = await getUsers();\r\n        setAllUsers(users);\r\n      } catch (error) {\r\n        console.error(\"Error fetching users:\", error);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, [getUsers]);\r\n\r\n  // Filtrar usuarios según el término de búsqueda y planes seleccionados\r\n  const filteredUsers = allUsers.filter((user) => {\r\n    const matchesSearch =\r\n      user.username.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      user.id.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n    let matchesPlan = true;\r\n    if (selectedPlans.length > 0) {\r\n      if (\r\n        user.subscripcion &&\r\n        user.subscripcion.plan &&\r\n        selectedPlans.includes(user.subscripcion.plan.id)\r\n      ) {\r\n        matchesPlan = true;\r\n      } else {\r\n        matchesPlan = false;\r\n      }\r\n    }\r\n    return matchesSearch && matchesPlan;\r\n  });\r\n\r\n  // Función para alternar la selección de un plan\r\n  const togglePlanSelection = (planId: number) => {\r\n    if (selectedPlans.includes(planId)) {\r\n      setSelectedPlans((prev) => prev.filter((id) => id !== planId));\r\n    } else {\r\n      setSelectedPlans((prev) => [...prev, planId]);\r\n    }\r\n  };\r\n\r\n  const openModal = (user: UserType) => {\r\n    setSelectedUser(user);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setSelectedUser(null);\r\n    setModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <section className=\"px-4 py-3 mx-auto max-w-7xl\">\r\n      <h1 className=\"mb-4 text-3xl font-bold\">Panel de Administración</h1>\r\n\r\n      {/* Filtros */}\r\n      <div className=\"flex flex-col gap-4 mb-6 md:flex-row\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Buscar por username, email o ID...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"flex-1 px-4 py-2 text-white bg-gray-700 rounded-lg\"\r\n        />\r\n\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          {planes.map((plan) => (\r\n            <button\r\n              key={plan.id}\r\n              type=\"button\"\r\n              onClick={() => togglePlanSelection(plan.id)}\r\n              className={`px-4 py-2 rounded-lg text-white cursor-pointer transition-colors ${\r\n                selectedPlans.includes(plan.id)\r\n                  ? \"bg-indigo-600\"\r\n                  : \"bg-gray-700\"\r\n              }`}\r\n            >\r\n              {plan.name}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Lista de usuarios */}\r\n      <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3\">\r\n        {filteredUsers.length > 0 ? (\r\n          filteredUsers.map((user) => (\r\n            <div\r\n              key={user.id}\r\n              onClick={() => openModal(user)}\r\n              className=\"p-4 transition-colors bg-gray-700 rounded-lg shadow cursor-pointer hover:bg-gray-600\"\r\n            >\r\n              <p className=\"text-lg font-bold text-white\">{user.username}</p>\r\n              <p className=\"text-gray-300\">{user.email}</p>\r\n              <p className=\"text-sm text-gray-400\">ID: {user.id}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"text-center text-gray-300 col-span-full\">\r\n            No se encontraron usuarios.\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal para ver detalles del usuario */}\r\n      {modalOpen && selectedUser && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n          <div\r\n            className=\"w-11/12 p-6 bg-gray-800 rounded-lg shadow-lg md:w-1/2 lg:w-1/3\"\r\n            style={{\r\n              transform: \"scaleX(1.2) scaleY(1.1)\",\r\n              transformOrigin: \"center\",\r\n            }}\r\n          >\r\n            <h2 className=\"mb-4 text-2xl font-bold text-white\">\r\n              Detalles del Usuario\r\n            </h2>\r\n            <div className=\"space-y-2 text-gray-300\">\r\n              {Object.entries(selectedUser)\r\n                .filter(([key]) => key !== \"password\" && key !== \"isAdmin\")\r\n                .map(([key, value]) => (\r\n                  <div key={key} className=\"flex\">\r\n                    <span className=\"mr-2 font-bold\">{key}:</span>\r\n                    <span>\r\n                      {typeof value === \"object\"\r\n                        ? JSON.stringify(value)\r\n                        : value}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n            <button\r\n              onClick={closeModal}\r\n              className=\"px-4 py-2 mt-4 text-white transition-all rounded bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700\"\r\n            >\r\n              Cerrar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}