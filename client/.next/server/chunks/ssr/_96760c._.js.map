{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/tomir/OneDrive/Desktop/AssetlyLandingPage/client/interfaces/Subscripcion.interface.ts"],"sourcesContent":["import { IPlan } from \"./Plan.interface\";\nimport { IUser } from \"./User.interface\";\n\nexport interface ISubscripcion {\n  id: string;\n  plan: IPlan;\n  fechaInicio: Date;\n  fechaUltimaPaga: Date;\n  fechaVencimiento: Date;\n  mercadopagoSubscriptionId: string;\n  status: SubscriptionStatus;\n  cancellationDate: Date | null;\n  cancellationReason: string;\n  metadata: Record<string, any>;\n  user: IUser;\n  database: IDatabase;\n}\n\nexport enum SubscriptionStatus {\n  ACTIVE = \"active\", // La suscripción está activa.\n  PAUSED = \"paused\", // La suscripción ha sido pausada.\n  CANCELLED = \"cancelled\", // La suscripción ha sido cancelada.\n  PENDING = \"pending\", // La suscripción está pendiente de aprobación.\n  APPROVED = \"approved\", // La suscripción ha sido aprobada.\n  REJECTED = \"rejected\", // La suscripción ha sido rechazada.\n  EXPIRED = \"expired\", // La suscripción ha expirado.\n}\n"],"names":[],"mappings":";;;AAkBO,IAAA,AAAK,4CAAA;;;;;;;;WAAA"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/tomir/OneDrive/Desktop/AssetlyLandingPage/client/components/suscriberProfile.tsx"],"sourcesContent":["\"use client\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  CaptionsOff,\n  CheckCircle,\n  NotebookPen,\n  PauseCircle,\n  XCircle,\n  CircleDotDashed,\n} from \"lucide-react\";\nimport Link from \"next/link\";\nimport {\n  ISubscripcion,\n  SubscriptionStatus,\n} from \"@/interfaces/Subscripcion.interface\";\nimport { SubscriptionContext } from \"@/context/Suscribe.context\";\n\nconst SuscriberProfile: React.FC = () => {\n  const { sub, fetchSub, desuscribirse } = useContext(SubscriptionContext);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [subscription, setSubscription] = useState<ISubscripcion | null>(null);\n  const [showCancelModal, setShowCancelModal] = useState<boolean>(false);\n  const [cancellationReason, setCancellationReason] = useState<string>(\"\");\n  const [cancelLoading, setCancelLoading] = useState<boolean>(false);\n  const [cancelSuccess, setCancelSuccess] = useState<boolean>(false);\n  const [cancelError, setCancelError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const getSubscription = async () => {\n      setLoading(true);\n      const subs = await fetchSub();\n      if (subs) {\n        setSubscription(subs);\n      } else {\n        setSubscription(null);\n      }\n      setLoading(false);\n    };\n\n    if (!sub) {\n      getSubscription();\n    } else {\n      setSubscription(sub);\n      setLoading(false);\n    }\n  }, [sub]);\n\n  if (loading) {\n    return (\n      <section className=\"py-5 text-center text-gray-400\">\n        Cargando suscripción...\n      </section>\n    );\n  }\n\n  if (!subscription) {\n    return (\n      <section className=\"py-5 text-center text-gray-400\">\n        No tienes una suscripción activa.\n      </section>\n    );\n  }\n\n  const fechaInicio = subscription.fechaInicio\n    ? new Date(subscription.fechaInicio)\n    : null;\n  const fechaUltimaPaga = subscription.fechaUltimaPaga\n    ? new Date(subscription.fechaUltimaPaga)\n    : null;\n  const fechaVencimiento = subscription.fechaVencimiento\n    ? new Date(subscription.fechaVencimiento)\n    : null;\n\n  const handleDesub = () => {\n    setShowCancelModal(true);\n  };\n\n  const handleCancelSubscription = async () => {\n    setCancelLoading(true);\n    setCancelError(null);\n\n    try {\n      const success = await desuscribirse(cancellationReason);\n\n      if (success) {\n        setCancelSuccess(true);\n        // Actualizamos la suscripción mostrada\n        await fetchSub();\n      } else {\n        setCancelError(\n          \"No se pudo cancelar la suscripción. Por favor, intenta de nuevo más tarde.\"\n        );\n      }\n    } catch (error) {\n      setCancelError(\"Error al procesar la cancelación.\");\n      console.error(\"Error en cancelación:\", error);\n    } finally {\n      setCancelLoading(false);\n    }\n  };\n\n  const closeModal = () => {\n    setShowCancelModal(false);\n    setCancellationReason(\"\");\n    setCancelSuccess(false);\n    setCancelError(null);\n  };\n\n  return (\n    <section className=\"px-2 py-3 mx-auto max-w-7xl\">\n      <div className=\"relative w-[75vw] mx-auto overflow-hidden bg-gray-800 shadow-2xl sm:px-6 rounded-2xl flex flex-col\">\n        <div className=\"relative flex flex-wrap items-center justify-between gap-3 px-4 py-6 md:flex-row\">\n          <div className=\"flex items-center gap-3\">\n            <button\n              onClick={handleDesub}\n              className=\"transition-transform transform hover:scale-110\"\n            >\n              <CaptionsOff size={48} className=\"text-red-400\" />\n            </button>\n            <div className=\"flex flex-col\">\n              <div className=\"flex items-center gap-2\">\n                <h2 className=\"text-2xl font-bold text-transparent sm:text-4xl bg-clip-text bg-gradient-to-r from-indigo-400 via-purple-400 to-pink-400\">\n                  {subscription.plan?.name}\n                </h2>\n                <div className=\"relative group\">\n                  {subscription.status === SubscriptionStatus.ACTIVE ? (\n                    <>\n                      <span className=\"absolute hidden p-1 ml-2 text-sm text-green-500 left-7 group-hover:block\">\n                        Active\n                      </span>\n                      <CheckCircle className=\"mt-1 ml-2 text-green-500\" />\n                    </>\n                  ) : subscription.status === SubscriptionStatus.PAUSED ? (\n                    <>\n                      <span className=\"absolute hidden p-1 ml-2 text-sm text-teal-500 left-7 group-hover:block\">\n                        Paused\n                      </span>\n                      <PauseCircle className=\"mt-1 ml-2 text-teal-500\" />\n                    </>\n                  ) : subscription.status === SubscriptionStatus.CANCELLED ? (\n                    <>\n                      <span className=\"absolute hidden p-1 ml-2 text-sm text-red-500 left-7 group-hover:block\">\n                        Cancelled\n                      </span>\n                      <XCircle className=\"mt-1 ml-2 text-red-500\" />\n                    </>\n                  ) : subscription.status === SubscriptionStatus.PENDING ? (\n                    <>\n                      <span className=\"absolute hidden p-1 ml-2 text-sm text-yellow-500 left-7 group-hover:block\">\n                        Pending\n                      </span>\n                      <CircleDotDashed className=\"mt-1 ml-2 text-yellow-500\" />\n                    </>\n                  ) : subscription.status === SubscriptionStatus.APPROVED ? (\n                    <>\n                      <span className=\"absolute hidden p-1 ml-2 text-sm text-blue-500 left-7 group-hover:block\">\n                        Approved\n                      </span>\n                      <CheckCircle className=\"mt-1 ml-2 text-blue-500\" />\n                    </>\n                  ) : subscription.status === SubscriptionStatus.REJECTED ? (\n                    <>\n                      <span className=\"absolute hidden p-1 ml-2 text-sm text-gray-500 left-7 group-hover:block\">\n                        Rejected\n                      </span>\n                      <XCircle className=\"mt-1 ml-2 text-gray-500\" />\n                    </>\n                  ) : subscription.status === SubscriptionStatus.EXPIRED ? (\n                    <>\n                      <span className=\"absolute hidden p-1 ml-2 text-sm text-indigo-500 left-7 group-hover:block\">\n                        Expired\n                      </span>\n                      <XCircle className=\"mt-1 ml-2 text-indigo-500\" />\n                    </>\n                  ) : (\n                    <>\n                      <span className=\"absolute hidden p-1 ml-2 text-sm text-gray-500 left-7 group-hover:block\">\n                        Unknown\n                      </span>\n                      <XCircle className=\"mt-1 ml-2 text-gray-500\" />\n                    </>\n                  )}\n                </div>\n              </div>\n              <p className=\"text-sm text-indigo-200/65\">{subscription.id}</p>\n            </div>\n          </div>\n          <p className=\"w-full text-xl font-bold text-transparent sm:text-2xl bg-clip-text bg-gradient-to-r from-indigo-400 via-purple-400 to-pink-400 md:text-right md:w-auto\">\n            {subscription.plan?.precio > 0\n              ? `$${subscription.plan?.precio}/m`\n              : \"Free\"}\n          </p>\n        </div>\n\n        <div className=\"p-4\">\n          <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n            <div>\n              <p className=\"block text-gray-300\">\n                <strong>Subscrito: </strong>\n                {fechaInicio ? fechaInicio.toLocaleDateString() : \"N/A\"}\n              </p>\n            </div>\n            <div>\n              <p className=\"block text-gray-300\">\n                <strong>Última paga: </strong>\n                {fechaUltimaPaga ? fechaUltimaPaga.toLocaleDateString() : \"N/A\"}\n              </p>\n            </div>\n            <div>\n              <p className=\"block text-gray-300\">\n                <strong>Vencimiento: </strong>\n                {fechaVencimiento\n                  ? fechaVencimiento.toLocaleDateString()\n                  : \"N/A\"}\n              </p>\n            </div>\n            {sub?.database && (\n              <div>\n                <Link\n                  href={\"https://google.com\"}\n                  target=\"_blank\"\n                  className=\"flex items-center gap-1 text-indigo-400 transition-colors duration-200 hover:text-indigo-300\"\n                >\n                  <span>sub?.database</span>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"14\"\n                    height=\"14\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"inline\"\n                  >\n                    <path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path>\n                    <polyline points=\"15 3 21 3 21 9\"></polyline>\n                    <line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line>\n                  </svg>\n                </Link>\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex justify-end my-4\">\n            <Link href=\"/planes\">\n              <button className=\"transition-transform transform text-indigo-200/65 hover:scale-110\">\n                <NotebookPen size={35} />\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      {/* Modal de cancelación */}\n      {showCancelModal && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n          <div className=\"w-full max-w-md p-6 mx-auto bg-gray-800 rounded-lg\">\n            <h3 className=\"mb-4 text-xl font-bold text-white\">\n              Cancelar Suscripción\n            </h3>\n\n            {cancelSuccess ? (\n              <div className=\"mb-6\">\n                <div className=\"p-4 mb-4 text-green-400 bg-green-900 rounded-md bg-opacity-20\">\n                  Tu suscripción ha sido cancelada correctamente.\n                </div>\n                <button\n                  onClick={closeModal}\n                  className=\"w-full px-4 py-2 font-bold text-white bg-indigo-600 rounded hover:bg-indigo-700\"\n                >\n                  Cerrar\n                </button>\n              </div>\n            ) : (\n              <>\n                <p className=\"mb-4 text-gray-300\">\n                  ¿Estás seguro de que deseas cancelar tu suscripción? Perderás\n                  acceso a todos los beneficios al final del período actual.\n                </p>\n\n                <div className=\"mb-4\">\n                  <label\n                    htmlFor=\"cancellationReason\"\n                    className=\"block mb-2 text-sm font-medium text-gray-300\"\n                  >\n                    Motivo de cancelación (opcional)\n                  </label>\n                  <textarea\n                    id=\"cancellationReason\"\n                    value={cancellationReason}\n                    onChange={(e) => setCancellationReason(e.target.value)}\n                    className=\"w-full p-2 text-white bg-gray-700 border border-gray-600 rounded-md focus:ring-indigo-500 focus:border-indigo-500\"\n                    rows={3}\n                    placeholder=\"¿Por qué deseas cancelar tu suscripción?\"\n                  ></textarea>\n                </div>\n\n                {cancelError && (\n                  <div className=\"p-4 mb-4 text-red-400 bg-red-900 rounded-md bg-opacity-20\">\n                    {cancelError}\n                  </div>\n                )}\n\n                <div className=\"flex gap-3\">\n                  <button\n                    onClick={closeModal}\n                    className=\"flex-1 px-4 py-2 font-bold text-white bg-gray-600 rounded hover:bg-gray-700\"\n                  >\n                    Cancelar\n                  </button>\n                  <button\n                    onClick={handleCancelSubscription}\n                    disabled={cancelLoading}\n                    className={`flex-1 px-4 py-2 font-bold text-white bg-red-600 rounded hover:bg-red-700 ${\n                      cancelLoading ? \"opacity-50 cursor-not-allowed\" : \"\"\n                    }`}\n                  >\n                    {cancelLoading ? \"Procesando...\" : \"Confirmar\"}\n                  </button>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default SuscriberProfile;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 683, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 689, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/tomir/OneDrive/Desktop/AssetlyLandingPage/client/app/%28default%29/profile/layout.tsx"],"sourcesContent":["\"use client\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"@/context/user.context\";\nimport { UserPen, LogOut, EyeOff, Eye } from \"lucide-react\";\nimport { useRouter } from \"next/navigation\";\nimport Link from \"next/link\";\nimport SuscriberProfile from \"@/components/suscriberProfile\";\n\nconst UserProfile: React.FC = () => {\n  const { user, updateUser, signOut } = useContext(UserContext);\n  const router = useRouter();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    company: \"\",\n    password: \"\",\n    telefono: \"\",\n    name: \"\",\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  useEffect(() => {\n    let timeout: NodeJS.Timeout;\n\n    if (!user) {\n      timeout = setTimeout(() => {\n        router?.push(\"/signin\");\n      }, 1000);\n    } else {\n      setFormData({\n        name: user.name || \"\",\n        email: user.email || \"\",\n        telefono: user.telefono || \"\",\n        company: user.company || \"\",\n        password: \"\",\n      });\n    }\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [user, router]);\n\n  if (!user) return null;\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const toggleShowPassword = () => {\n    setShowPassword((prev) => !prev);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Si la contraseña está vacía, no la incluimos en el objeto a enviar\n    const { password, ...rest } = formData;\n    const updateData = { id: user.id, ...rest, ...(password && { password }) };\n\n    await updateUser(updateData);\n    setIsEditing(false);\n  };\n\n  const handleSignOut = () => {\n    signOut();\n  };\n\n  const toggleEditMode = () => {\n    setIsEditing(!isEditing);\n  };\n\n  return (\n    <section className=\"px-2 py-3 mx-auto max-w-7xl\">\n      <div className=\"relative w-[75vw] mx-auto overflow-hidden bg-gray-800 shadow-2xl sm:px-6 rounded-2xl flex flex-col\">\n        <div className=\"relative flex flex-wrap items-center justify-between gap-3 px-4 py-6 md:flex-row\">\n          <div className=\"flex items-center gap-3\">\n            <Link\n              href=\"/\"\n              onClick={handleSignOut}\n              className=\"transition-transform transform hover:scale-110\"\n            >\n              <LogOut size={48} className=\"text-red-400\" />\n            </Link>\n            <div className=\"flex flex-col\">\n              <h2 className=\"text-4xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-indigo-400 via-purple-400 to-pink-400\">\n                {user.name}\n              </h2>\n              <p className=\"text-sm text-indigo-200/65\">{user.id}</p>\n            </div>\n          </div>\n          <p className=\"w-full text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-indigo-400 via-purple-400 to-pink-400 md:text-right md:w-auto\">\n            {user.company}\n          </p>\n        </div>\n\n        {user?.isAdmin && (\n          <div className=\"absolute top-0 right-0 px-3 py-1 text-lg rounded-l-lg bg-gradient-to-r from-indigo-600 via-purple-600 to-pink-400 text-neutral-950\">\n            Admin\n          </div>\n        )}\n\n        <div className=\"p-4\">\n          {isEditing ? (\n            <form onSubmit={handleSubmit}>\n              <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n                <div>\n                  <label className=\"block text-gray-300\">Nombre</label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleChange}\n                    className=\"w-full px-3 py-2 mt-1 text-white bg-gray-700 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-gray-300\">Email</label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    className=\"w-full px-3 py-2 mt-1 text-white bg-gray-700 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-gray-300\">Teléfono</label>\n                  <input\n                    type=\"text\"\n                    name=\"telefono\"\n                    value={formData.telefono}\n                    onChange={handleChange}\n                    className=\"w-full px-3 py-2 mt-1 text-white bg-gray-700 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-gray-300\">Empresa</label>\n                  <input\n                    type=\"text\"\n                    name=\"company\"\n                    value={formData.company}\n                    onChange={handleChange}\n                    className=\"w-full px-3 py-2 mt-1 text-white bg-gray-700 rounded-lg\"\n                  />\n                </div>\n              </div>\n              <div className=\"mt-6\">\n                <label className=\"block text-gray-300\">\n                  Contraseña (dejar en blanco para no cambiar)\n                </label>\n                <div className=\"relative mt-1\">\n                  <input\n                    type={showPassword ? \"text\" : \"password\"}\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                    className=\"w-full px-3 py-2 text-white bg-gray-700 rounded-lg\"\n                    placeholder=\"********\"\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={toggleShowPassword}\n                    className=\"absolute inset-y-0 right-0 flex items-center pr-3\"\n                  >\n                    {showPassword ? (\n                      <EyeOff size={20} className=\"text-white\" />\n                    ) : (\n                      <Eye size={20} className=\"text-white\" />\n                    )}\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"flex justify-between mt-4\">\n                <button\n                  type=\"submit\"\n                  className=\"px-6 py-3 font-semibold text-white transition-transform transform rounded-lg shadow-md hover:scale-110 bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700\"\n                >\n                  Guardar Cambios\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={toggleEditMode}\n                  className=\"px-4 py-2 text-white transition-transform transform bg-gray-600 rounded-lg hover:bg-gray-700 hover:scale-110\"\n                >\n                  Cancelar\n                </button>\n              </div>\n            </form>\n          ) : (\n            <div>\n              <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n                <div>\n                  <p className=\"block text-gray-300\">\n                    <strong>Nombre:</strong> {formData.name}\n                  </p>\n                </div>\n                <div>\n                  <p className=\"block text-gray-300\">\n                    <strong>Email:</strong> {formData.email}\n                  </p>\n                </div>\n                <div>\n                  <p className=\"block text-gray-300\">\n                    <strong>Teléfono:</strong> {formData.telefono}\n                  </p>\n                </div>\n                <div>\n                  <p className=\"block text-gray-300\">\n                    <strong>Empresa:</strong> {formData.company}\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex justify-end mt-4\">\n                <button\n                  onClick={toggleEditMode}\n                  className=\"transition-transform transform text-indigo-200/65 hover:scale-110\"\n                >\n                  <UserPen size={35} />\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      <SuscriberProfile />\n    </section>\n  );\n};\n\nexport default React.memo(UserProfile);\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}