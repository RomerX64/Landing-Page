{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/tomir/OneDrive/Desktop/AssetlyLandingPage/client/app/%28default%29/suscribirse/layout.tsx"],"sourcesContent":["\"use client\";\nimport React, { useContext, useState, useEffect, useRef } from \"react\";\nimport { ChevronLeft, AlertCircle, RefreshCw } from \"lucide-react\";\nimport { CardPayment } from \"@mercadopago/sdk-react\";\nimport { useRouter } from \"next/navigation\";\nimport { SubscriptionContext } from \"@/context/Suscribe.context\";\nimport { PlansContext } from \"@/context/Planes.context\";\nimport {\n  IAdditionalData,\n  ICardPaymentBrickPayer,\n  ICardPaymentFormData,\n} from \"@mercadopago/sdk-react/esm/bricks/cardPayment/type\";\n\nconst PaymentForm = () => {\n  const { suscribirse, sub, isLoading, mpInitialized } =\n    useContext(SubscriptionContext);\n  const { viewPlan } = useContext(PlansContext);\n  const router = useRouter();\n  const [error, setError] = useState<string | null>(null);\n  const [paymentProcessing, setPaymentProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  // Referencia para el contenedor del CardPayment\n  const paymentContainerRef = useRef<HTMLDivElement>(null);\n\n  // Referencia para mantener el formData\n  const formDataRef =\n    useRef<ICardPaymentFormData<ICardPaymentBrickPayer> | null>(null);\n\n  // Effect to handle successful subscription and redirect\n  useEffect(() => {\n    if (sub && sub.id) {\n      // Reset progress to full\n      setProgress(100);\n\n      // Short delay to allow progress bar to complete visually\n      const redirectTimer = setTimeout(() => {\n        router.push(\"/success\");\n      }, 500);\n\n      return () => clearTimeout(redirectTimer);\n    }\n  }, [sub, router]);\n\n  // Verificar si MercadoPago está inicializado\n  useEffect(() => {\n    if (!mpInitialized) {\n      setError(\n        \"No se pudo inicializar el servicio de pago. Verifica que la clave pública esté configurada correctamente.\"\n      );\n    } else if (\n      error ===\n      \"No se pudo inicializar el servicio de pago. Verifica que la clave pública esté configurada correctamente.\"\n    ) {\n      setError(null);\n    }\n  }, [mpInitialized]);\n\n  // Progress bar effect during payment processing\n  useEffect(() => {\n    let progressInterval: NodeJS.Timeout;\n\n    if (paymentProcessing) {\n      // En lugar de quitar el componente, ocultamos el contenedor con CSS\n      if (paymentContainerRef.current) {\n        paymentContainerRef.current.style.display = \"none\";\n      }\n\n      progressInterval = setInterval(() => {\n        setProgress((prevProgress) => {\n          if (prevProgress >= 90) {\n            clearInterval(progressInterval);\n            return 90;\n          }\n          return prevProgress + 10;\n        });\n      }, 500);\n    } else {\n      // Volvemos a mostrar el contenedor cuando no está procesando\n      if (paymentContainerRef.current) {\n        paymentContainerRef.current.style.display = \"\";\n      }\n    }\n\n    return () => {\n      if (progressInterval) clearInterval(progressInterval);\n    };\n  }, [paymentProcessing]);\n\n  const validateCardData = (\n    formData: ICardPaymentFormData<ICardPaymentBrickPayer>\n  ): boolean => {\n    if (!formData.token) {\n      setError(\"Falta el token de la tarjeta.\");\n      return false;\n    }\n    if (!formData.payment_method_id) {\n      setError(\"Método de pago no seleccionado.\");\n      return false;\n    }\n    if (!formData.payer?.email) {\n      setError(\"Falta el email del pagador.\");\n      return false;\n    }\n    return true;\n  };\n\n  const handleRetry = () => {\n    setError(null);\n    setPaymentProcessing(false);\n    setProgress(0);\n    window.location.reload(); // Recargamos la página para reiniciar MercadoPago si es necesario\n  };\n\n  const handleFormSubmit = async (\n    formData: ICardPaymentFormData<ICardPaymentBrickPayer>,\n    additionalData?: IAdditionalData\n  ): Promise<void> => {\n    if (!mpInitialized) {\n      setError(\n        \"El servicio de pago no está inicializado. Por favor, recarga la página.\"\n      );\n      return;\n    }\n\n    if (!viewPlan) {\n      setError(\"No se ha seleccionado un plan.\");\n      return;\n    }\n\n    // Guardamos el formData en la referencia\n    formDataRef.current = formData;\n\n    if (!validateCardData(formData)) return;\n\n    try {\n      const paymentMethodToken = formData.token;\n\n      // Verificamos que el email existe antes de usarlo\n      const email = formData.payer?.email;\n      if (!email) {\n        setError(\"Falta el email del pagador.\");\n        return;\n      }\n\n      setPaymentProcessing(true);\n      setProgress(10);\n\n      const result = await suscribirse(viewPlan.id, paymentMethodToken, email);\n\n      if (!result.success) {\n        setError(result.error || \"Hubo un error al procesar la suscripción.\");\n        setPaymentProcessing(false);\n        setProgress(0);\n      }\n    } catch (error: any) {\n      console.error(\"Error al procesar el pago:\", error);\n      setError(\n        error.message ||\n          \"Hubo un error al procesar el pago. Intenta nuevamente.\"\n      );\n      setPaymentProcessing(false);\n      setProgress(0);\n    }\n  };\n\n  // Si MercadoPago no está inicializado, mostramos un mensaje específico\n  if (!mpInitialized) {\n    return (\n      <section className=\"w-10/12 max-w-3xl px-1 py-5 mx-auto\">\n        <div className=\"p-8 bg-gray-800 shadow-2xl rounded-2xl\">\n          <div className=\"flex items-center mb-6\">\n            <button\n              onClick={() => router.back()}\n              className=\"p-2 mr-4 text-white bg-gray-700 rounded-full hover:bg-gray-600\"\n            >\n              <ChevronLeft size={24} />\n            </button>\n            <h2 className=\"text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-indigo-400 via-purple-400 to-pink-400\">\n              Completa tu Pago\n            </h2>\n          </div>\n\n          <div className=\"p-6 text-center\">\n            <AlertCircle className=\"w-16 h-16 mx-auto mb-4 text-yellow-400\" />\n            <h3 className=\"mb-2 text-xl font-bold text-white\">\n              Error al inicializar el servicio de pago\n            </h3>\n            <p className=\"mb-6 text-gray-300\">\n              No se pudo inicializar el servicio de pagos. Esto puede suceder si\n              la clave pública no está configurada correctamente.\n            </p>\n            <button\n              onClick={() => window.location.reload()}\n              className=\"flex items-center justify-center px-4 py-2 mx-auto font-medium text-white bg-indigo-600 rounded-md hover:bg-indigo-700\"\n            >\n              <RefreshCw className=\"w-4 h-4 mr-2\" /> Reintentar\n            </button>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section className=\"w-10/12 max-w-3xl px-1 py-5 mx-auto\">\n      {/* Progress bar */}\n      {(paymentProcessing || progress > 0) && (\n        <div\n          className=\"fixed top-0 left-0 z-50 h-1 transition-all duration-300 ease-out bg-blue-500\"\n          style={{ width: `${progress}%` }}\n        />\n      )}\n\n      <div className=\"p-8 bg-gray-800 shadow-2xl rounded-2xl\">\n        <div className=\"flex items-center mb-6\">\n          <button\n            onClick={() => router.back()}\n            className=\"p-2 mr-4 text-white bg-gray-700 rounded-full hover:bg-gray-600\"\n            disabled={paymentProcessing || isLoading}\n          >\n            <ChevronLeft size={24} />\n          </button>\n          <h2 className=\"text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-indigo-400 via-purple-400 to-pink-400\">\n            Completa tu Pago\n          </h2>\n        </div>\n\n        {viewPlan && (\n          <div className=\"mb-3\">\n            <p className=\"text-gray-300\">\n              Estás suscribiéndote al plan{\" \"}\n              <span className=\"font-bold\">{viewPlan.name}</span> por{\" \"}\n              <span className=\"font-bold\">\n                ${viewPlan.precio} dólares mensuales\n              </span>\n              .\n            </p>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"p-4 mb-4 border border-red-400 rounded-lg bg-red-400/10\">\n            <div className=\"flex items-start\">\n              <AlertCircle className=\"w-5 h-5 mt-0.5 mr-2 text-red-400\" />\n              <div>\n                <p className=\"font-medium text-red-400\">{error}</p>\n                <button\n                  onClick={handleRetry}\n                  className=\"mt-2 text-sm font-medium text-indigo-400 hover:text-indigo-300\"\n                >\n                  Intentar nuevamente\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {paymentProcessing && (\n          <div className=\"py-6 text-center\">\n            <p className=\"text-xl text-gray-300\">Procesando tu pago...</p>\n            <p className=\"text-gray-400\">Por favor, no cierres esta ventana.</p>\n          </div>\n        )}\n\n        {!paymentProcessing && (\n          <div id=\"cardPaymentBrick_container\" ref={paymentContainerRef}>\n            <CardPayment\n              key=\"payment-form\"\n              initialization={{ amount: viewPlan ? viewPlan.precio : 0 }}\n              onSubmit={handleFormSubmit}\n              onError={(err: any) => {\n                console.error(\"Error en el Brick de Pago:\", err);\n                setError(\n                  err.message ||\n                    \"Hubo un error al procesar el pago. Intenta nuevamente.\"\n                );\n              }}\n              customization={{\n                visual: {\n                  style: {\n                    theme: \"dark\",\n                  },\n                },\n                paymentMethods: {\n                  types: {\n                    included: [\"credit_card\", \"debit_card\", \"prepaid_card\"],\n                  },\n                  minInstallments: 1,\n                  maxInstallments: 12,\n                },\n              }}\n            />\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default PaymentForm;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}