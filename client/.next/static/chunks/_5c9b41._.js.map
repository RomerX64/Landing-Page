{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/tomir/OneDrive/Desktop/AssetlyLandingPage/client/app/%28default%29/administracion/layout.tsx"],"sourcesContent":["\"use client\";\nimport { AdminContext } from \"@/context/Administracion.context\";\nimport { SuscribeContext } from \"@/context/Suscribe.context\";\nimport { useRouter } from \"next/navigation\";\nimport React, { useContext, useEffect, useState } from \"react\";\n\ninterface UserType {\n  id: string;\n  username: string;\n  email: string;\n  subscripcion?: {\n    plan?: {\n      id: number;\n      name: string;\n    };\n  };\n  // Otros campos que pueda tener el usuario\n  [key: string]: any;\n}\n\nconst AdminPanel: React.FC = () => {\n  const { getUsers } = useContext(AdminContext);\n  const { planes } = useContext(SuscribeContext);\n  const [allUsers, setAllUsers] = useState<UserType[]>([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedPlans, setSelectedPlans] = useState<number[]>([]);\n  const router = useRouter();\n  const [selectedUser, setSelectedUser] = useState<UserType | null>(null);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  // Cargar usuarios al montar el componente\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const users = await getUsers();\n        setAllUsers(users);\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    };\n    fetchUsers();\n  }, [getUsers]);\n\n  // Filtrar usuarios según el término de búsqueda y planes seleccionados\n  const filteredUsers = allUsers.filter((user) => {\n    const matchesSearch =\n      user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      user.id.toLowerCase().includes(searchTerm.toLowerCase());\n\n    let matchesPlan = true;\n    if (selectedPlans.length > 0) {\n      if (\n        user.subscripcion &&\n        user.subscripcion.plan &&\n        selectedPlans.includes(user.subscripcion.plan.id)\n      ) {\n        matchesPlan = true;\n      } else {\n        matchesPlan = false;\n      }\n    }\n    return matchesSearch && matchesPlan;\n  });\n\n  // Función para alternar la selección de un plan\n  const togglePlanSelection = (planId: number) => {\n    if (selectedPlans.includes(planId)) {\n      setSelectedPlans((prev) => prev.filter((id) => id !== planId));\n    } else {\n      setSelectedPlans((prev) => [...prev, planId]);\n    }\n  };\n\n  const openModal = (user: UserType) => {\n    setSelectedUser(user);\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setSelectedUser(null);\n    setModalOpen(false);\n  };\n\n  // Función para redirigir al usuario a la página de modificación\n  const redirectToEdit = (userId: string) => {\n    // window.open(`/administracion/user/${userId}`, \"_blank\");\n    router.push(`/administracion/${userId}`);\n  };\n\n  return (\n    <section className=\"px-4 py-3 mx-auto max-w-7xl\">\n      <h1 className=\"mb-4 text-3xl font-bold\">Panel de Administración</h1>\n\n      {/* Filtros */}\n      <div className=\"flex flex-col gap-4 mb-6 md:flex-row\">\n        <input\n          type=\"text\"\n          placeholder=\"Buscar por username, email o ID...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"flex-1 px-4 py-2 text-white bg-gray-700 rounded-lg\"\n        />\n\n        <div className=\"flex flex-wrap gap-4\">\n          {planes.map((plan) => (\n            <button\n              key={plan.id}\n              type=\"button\"\n              onClick={() => togglePlanSelection(plan.id)}\n              className={`px-4 py-2 rounded-lg text-white cursor-pointer transition-colors ${\n                selectedPlans.includes(plan.id)\n                  ? \"bg-indigo-600\"\n                  : \"bg-gray-700\"\n              }`}\n            >\n              {plan.name}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        {filteredUsers.length > 0 ? (\n          filteredUsers.map((user) => (\n            <div\n              key={user.id}\n              onClick={() => openModal(user)}\n              className=\"relative p-4 transition-colors bg-gray-700 rounded-lg shadow cursor-pointer hover:bg-gray-600\"\n            >\n              <p className=\"text-lg font-bold text-white\">{user.name}</p>\n              {user.isAdmin && (\n                <div className=\"absolute flex items-center justify-center w-4 h-4 text-xs font-bold rounded-full top-2 right-2 bg-gradient-to-r from-indigo-600 via-purple-600 to-pink-400 text-neutral-950\">\n                  A\n                </div>\n              )}\n              <p className=\"text-gray-300\">{user.email}</p>\n              <p className=\"text-sm text-gray-400\">ID: {user.id}</p>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center text-gray-300 col-span-full\">\n            No se encontraron usuarios.\n          </div>\n        )}\n      </div>\n\n      {/* Modal para ver detalles del usuario */}\n      {modalOpen && selectedUser && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n          <div\n            className=\"w-11/12 p-6 bg-gray-800 rounded-lg shadow-lg md:w-1/2 lg:w-1/3\"\n            style={{\n              transform: \"scaleX(1.2) scaleY(1.1)\",\n              transformOrigin: \"center\",\n            }}\n          >\n            <h2 className=\"mb-4 text-2xl font-bold text-white\">\n              Detalles del Usuario\n            </h2>\n            <div className=\"space-y-2 text-gray-300\">\n              {Object.entries(selectedUser)\n                .filter(([key]) => key !== \"password\" && key !== \"isAdmin\")\n                .map(([key, value]) => (\n                  <div key={key} className=\"flex\">\n                    <span className=\"mr-2 font-bold\">{key}:</span>\n                    <span>\n                      {typeof value === \"object\"\n                        ? JSON.stringify(value)\n                        : value}\n                    </span>\n                  </div>\n                ))}\n            </div>\n            <button\n              onClick={closeModal}\n              className=\"px-4 py-2 mt-4 text-white transition-all rounded bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700\"\n            >\n              Cerrar\n            </button>\n            <button\n              onClick={() => redirectToEdit(selectedUser.id)}\n              className=\"px-4 py-2 mt-4 ml-2 text-white transition-all rounded bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700\"\n            >\n              Modificar\n            </button>\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default AdminPanel;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/tomir/OneDrive/Desktop/AssetlyLandingPage/client/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0]}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}